[{"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/index.js":"1","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/App.js":"2","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/history.js":"3","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/LoginPage.js":"4","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/HomePage.js":"5","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/ListOfEmployee.js":"6","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/CreateEmployee.js":"7","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/EditEmployee.js":"8","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/EmployeeDetails.js":"9","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/ListofPersonalDetails.js":"10","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/HR_Page.js":"11","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/CreatePersonalDetails.js":"12","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/PersonalDetails.js":"13","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/EditPersonalDetails.js":"14"},{"size":712,"mtime":1613312894211,"results":"15","hashOfConfig":"16"},{"size":1665,"mtime":1613453635506,"results":"17","hashOfConfig":"16"},{"size":84,"mtime":1613312894211,"results":"18","hashOfConfig":"16"},{"size":1912,"mtime":1613312894211,"results":"19","hashOfConfig":"16"},{"size":1863,"mtime":1613454151458,"results":"20","hashOfConfig":"16"},{"size":5199,"mtime":1613453790379,"results":"21","hashOfConfig":"16"},{"size":7049,"mtime":1613312894207,"results":"22","hashOfConfig":"16"},{"size":7174,"mtime":1613454015922,"results":"23","hashOfConfig":"16"},{"size":4195,"mtime":1613312894207,"results":"24","hashOfConfig":"16"},{"size":5112,"mtime":1613312894211,"results":"25","hashOfConfig":"16"},{"size":1897,"mtime":1613453944564,"results":"26","hashOfConfig":"16"},{"size":5842,"mtime":1613453829808,"results":"27","hashOfConfig":"16"},{"size":4599,"mtime":1613312894211,"results":"28","hashOfConfig":"16"},{"size":6495,"mtime":1613453696708,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"o2gim2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/index.js",[],["64","65"],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/App.js",[],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/history.js",[],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/LoginPage.js",[],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/HomePage.js",[],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/ListOfEmployee.js",["66"],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/CreateEmployee.js",["67","68","69","70"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    // toast.configure() \n    // const remind = (message)=>{  \n    //     toast.success(message,\n    //     {position: toast.POSITION.BOTTOM_RIGHT})  \n    //   };\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         EmployeeCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                        <Logo src={require(\"../images/Logo.png\")}></Logo> Beeja\n                        </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/list\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n",["71","72"],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/EditEmployee.js",[],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/EmployeeDetails.js",["73","74","75","76","77","78","79","80","81"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { id } = useParams();\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={data.employee.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/ListofPersonalDetails.js",["82","83","84"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nexport const PersonalDetails = () => {\n    const { id } = useParams();\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n    const Show = gql`\n   query{ \n    personalList{\n        id\n        name\n        code\n        email\n        role\n        pan_No\n        account_No\n        ifsc_code\n    }\n }`;\n    const DELETE_PD = gql`\n mutation DeletePD($id: String!){\n    deletePersonalDetails(id: $id){\n respCode,\n respMessage \n}\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_PD);\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n\n    console.log(data);\n    if (loading) return <p>loading</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">Personal Details\n<Button >\n                    <LinkTag to={\"/createpresonal\"}>\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>PAN</TableHeading>\n                        <TableHeading>Account Number</TableHeading>\n                        <TableHeading>IFSC Code</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                    {data.personalList.map((emp, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/pd/${emp.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{emp.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{emp.name}</TableData>\n                            <TableData>{emp.email}</TableData>\n                            <TableData>{emp.role}</TableData>\n                            <TableData>{emp.pan_No}</TableData>\n                            <TableData>{emp.account_No}</TableData>\n                            <TableData>{emp.ifsc_code}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                               <LinkTag to={`/editpersonal/${emp.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                    </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n\n                                <Button onClick={() => handleDelete(emp.id)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n\n                            </TableData>\n\n                        </TableRow>\n                    ))\n                    }\n                </Table>\n            </Container>\n\n        </Fragment>\n\n    )\n}\n\n","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/HR_Page.js",[],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/CreatePersonalDetails.js",[],"/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/PersonalDetails.js",["85","86","87","88","89","90","91","92","93"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const Personal_Details = () => {\n\n    const [personState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email:\"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n    const { id } = useParams();\n\n    const DisplayPD =gql`\n    query PDDisplay($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.personal) {\n        personState.name = data.personal.name;\n        personState.code = data.personal.code;\n        personState.email = data.personal.email;\n        personState.role = data.personal.role;\n        personState.pan_No = data.personal.pan_No;\n        personState.account_No = data.personal.account_No;\n        personState.ifsc_code = data.personal.ifsc_code;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={personState.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={personState.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={personState.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.role}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.pan_No}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\"> Account Number</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.account_No}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\"> IFSC</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.ifsc_code}  readOnly/></TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/sushma/Desktop/pavan/beeja_frontend/my-beeja/src/component/EditPersonalDetails.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":80,"column":13,"nodeType":"100","messageId":"101","endLine":80,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":24},{"ruleId":"98","severity":1,"message":"103","line":16,"column":7,"nodeType":"100","messageId":"101","endLine":16,"endColumn":11},{"ruleId":"98","severity":1,"message":"104","line":60,"column":7,"nodeType":"100","messageId":"101","endLine":60,"endColumn":16},{"ruleId":"98","severity":1,"message":"105","line":99,"column":46,"nodeType":"100","messageId":"101","endLine":99,"endColumn":50},{"ruleId":"94","replacedBy":"106"},{"ruleId":"96","replacedBy":"107"},{"ruleId":"98","severity":1,"message":"108","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"109","line":1,"column":38,"nodeType":"100","messageId":"101","endLine":1,"endColumn":46},{"ruleId":"98","severity":1,"message":"110","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":21},{"ruleId":"98","severity":1,"message":"103","line":14,"column":7,"nodeType":"100","messageId":"101","endLine":14,"endColumn":11},{"ruleId":"98","severity":1,"message":"111","line":29,"column":7,"nodeType":"100","messageId":"101","endLine":29,"endColumn":16},{"ruleId":"98","severity":1,"message":"112","line":37,"column":7,"nodeType":"100","messageId":"101","endLine":37,"endColumn":13},{"ruleId":"98","severity":1,"message":"113","line":39,"column":7,"nodeType":"100","messageId":"101","endLine":39,"endColumn":13},{"ruleId":"98","severity":1,"message":"104","line":58,"column":7,"nodeType":"100","messageId":"101","endLine":58,"endColumn":16},{"ruleId":"98","severity":1,"message":"114","line":64,"column":7,"nodeType":"100","messageId":"101","endLine":64,"endColumn":14},{"ruleId":"98","severity":1,"message":"103","line":17,"column":7,"nodeType":"100","messageId":"101","endLine":17,"endColumn":11},{"ruleId":"98","severity":1,"message":"99","line":76,"column":13,"nodeType":"100","messageId":"101","endLine":76,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":143,"column":29,"nodeType":"117","endLine":143,"endColumn":40},{"ruleId":"98","severity":1,"message":"108","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"110","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":21},{"ruleId":"98","severity":1,"message":"103","line":16,"column":7,"nodeType":"100","messageId":"101","endLine":16,"endColumn":11},{"ruleId":"98","severity":1,"message":"111","line":31,"column":7,"nodeType":"100","messageId":"101","endLine":31,"endColumn":16},{"ruleId":"98","severity":1,"message":"112","line":39,"column":7,"nodeType":"100","messageId":"101","endLine":39,"endColumn":13},{"ruleId":"98","severity":1,"message":"113","line":41,"column":7,"nodeType":"100","messageId":"101","endLine":41,"endColumn":13},{"ruleId":"98","severity":1,"message":"104","line":60,"column":7,"nodeType":"100","messageId":"101","endLine":60,"endColumn":16},{"ruleId":"98","severity":1,"message":"114","line":66,"column":7,"nodeType":"100","messageId":"101","endLine":66,"endColumn":14},{"ruleId":"98","severity":1,"message":"118","line":73,"column":25,"nodeType":"100","messageId":"101","endLine":73,"endColumn":33},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","'Logo' is assigned a value but never used.","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.",["119"],["120"],"'Component' is defined but never used.","'useState' is defined but never used.","'useMutation' is defined but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.","'Button' is assigned a value but never used.","'LinkTag' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]